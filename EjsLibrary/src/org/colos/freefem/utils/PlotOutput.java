package org.colos.freefem.utils;

/* The org.colos.freefem package contains Java classes that allow interfacing with a loal or server
 * FreeFem++ installation.
 * 
 * @author María José Cano, Universidad de Murcia, Murcia, Spain
 * @author Francisco Esquembre, Universidad de Murcia, Murcia, Spain <fem@um.es>
 * @author Invaluable help provided by Antoine Le Hyaric (Lab Jacques-Louis Lions, Paris, France)
 * @version 0.0 May 2012
 * @version 1.0 Dec 2012
 */

import java.util.ArrayList;
import java.util.Hashtable;

import org.colos.freefem.PDEData;
import org.colos.freefem.PDEMesh;

/**
 * PlotOutput encapsulates the output generated by a PLOT command in a freefem++ script.
 * A PlotOutput generates a number of PDEData objects which can be retrieved using the 
 * order in which the PLOT command generates them. This number is usually just one.
 */
public class PlotOutput {
  private boolean mWantsToPause=false;
  private Hashtable <Long, PDEMesh> mMeshList = new Hashtable<Long, PDEMesh>();
  private ArrayList<PDEData> mDataList = new ArrayList<PDEData>();
  private String mText ="";
  // ----------------
  // public API
  // ----------------
  
  public int getDataCount() { return mDataList.size(); }
  
  public PDEData getData(int dataNumber) { return mDataList.get(dataNumber); }
  
  // ----------------
  // package methods
  // ----------------
  
  /**
   * Whether this plot ends because of a wait = 1
   * @return
   */
  boolean wantsToPause() { return mWantsToPause; }

  void setWantsToPause(boolean pause) { mWantsToPause = pause; }
  
  void setText(String text){mText = text;}
  public String getText(){return mText;}
  
  void addMesh(long reference, PDEMesh mesh) { mMeshList.put(reference, mesh); }

  PDEMesh getMesh(long reference) { return mMeshList.get(reference); }

  void addData(PDEData data) { mDataList.add(data); }
  
}
